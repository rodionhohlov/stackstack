#include<stdio.h>
#include<assert.h>
#include<errno.h>
#include<string.h>

#include "stkType.h"
#include "calc.h"

int calculator(stack_t* stk) {

    FILE* algoritm = fopen("calculator.txt", "r");

    int num = 0;
    char func[10]= {};

    char params[25] = {};

    while (fgets(params, sizeof(params), algoritm) != NULL) {    // stack_push stack_pop
        int res = sscanf(params, "%s %d", func, &num);
        make_func(stk, func, num, res);
    }

    return 0;
}

void make_func(stack_t* stk, char* func, int num, int res) {

    int* val1 = NULL;
    int* val2 = NULL;
    int deleted = 0;
    int err = 0;

    if (res == 1) {
        *val1 = stack_pop(stk);
        *val2 = stack_pop(stk);


        if (strcmp(func, "SUM") == 0)
            err = stack_push(stk, (*val1) + (*val2));

        else if (strcmp(func, "SUB") == 0)
            err = stack_push(stk, val2-val1);

        else if (strcmp(func, "MUL"))
            err = stack_push(stk, (*val2) * (*val1));

        else if (strcmp(func, "DIV") == 0)
            err = stack_push(stk, (*val2) / (*val1));

        else if (strcmp(func, "SQvRT") == 0) {
            int i = 0;
            for (; i*i <= (*val1); i++) {}

            err = stack_push(stk, *val2);
            err = stack_push(stk, i);
        }
        
        else if (strcmp(func, "OUT") == 0) {
            FILE* output = fopen("output.txt", "a");
            
            for (int i = 1; i < stk->flag; i++) {
                fprintf(output, "stk[%d] = %d\n", i-1, 
                

        else
            printf("error in calc\n");
    }

    else if (res == 2) {
        if (strcmp(func, "PUSH") == 0)
            stack_push(stk, num);

        else if (strcmp(func, "POP") == 0)
            deleted = stack_pop(stk);
    }

    else
        printf("incorrect num of args");
}
